/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */

#nullable enable

namespace MediaClient.Media
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using MediaClient;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.10.0.0")]
    public partial class AudioOutputConfiguration : IJsonOnDeserialized, IJsonOnSerializing
    {
        /// <summary>
        /// User readable name. Length up to 64 characters.
        /// </summary>
        [JsonPropertyName("Name")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
        /// </summary>
        [JsonPropertyName("OutputLevel")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public int OutputLevel { get; set; } = default!;

        /// <summary>
        /// Token of the phsycial Audio output.
        /// </summary>
        [JsonPropertyName("OutputToken")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string OutputToken { get; set; } = default!;

        /// <summary>
        /// An audio channel MAY support different types of audio transmission. While for full duplexoperation no special handling is required, in half duplex operation the transmission directionneeds to be switched.The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates whichdirection is currently active. An NVC can switch between different modes by setting theAudioOutputConfiguration.The following modes for the Send-Primacy are defined:www.onvif.org/ver20/HalfDuplex/ServerThe server is allowed to send audio data to the client. The client shall not sendaudio data via the backchannel to the NVT in this mode.www.onvif.org/ver20/HalfDuplex/ClientThe client is allowed to send audio data via the backchannel to the server. TheNVT shall not send audio data to the client in this mode.www.onvif.org/ver20/HalfDuplex/AutoIt is up to the device how to deal with sending and receiving audio data.Acoustic echo cancellation is out of ONVIF scope.
        /// </summary>
        [JsonPropertyName("SendPrimacy")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? SendPrimacy { get; set; } = default;

        /// <summary>
        /// Token that uniquely references this configuration. Length up to 64 characters.
        /// </summary>
        [JsonPropertyName("token")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string Token { get; set; } = default!;

        /// <summary>
        /// Number of internal references currently using this configuration. This informational parameter is read-only. Deprecated for Media2 Service.
        /// </summary>
        [JsonPropertyName("UseCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public int UseCount { get; set; } = default!;

        void IJsonOnDeserialized.OnDeserialized()
        {
            if (Name is null)
            {
                throw new ArgumentNullException("Name field cannot be null");
            }
            if (OutputToken is null)
            {
                throw new ArgumentNullException("OutputToken field cannot be null");
            }
            if (Token is null)
            {
                throw new ArgumentNullException("token field cannot be null");
            }
        }

        void IJsonOnSerializing.OnSerializing()
        {
            if (Name is null)
            {
                throw new ArgumentNullException("Name field cannot be null");
            }
            if (OutputToken is null)
            {
                throw new ArgumentNullException("OutputToken field cannot be null");
            }
            if (Token is null)
            {
                throw new ArgumentNullException("token field cannot be null");
            }
        }
    }
}

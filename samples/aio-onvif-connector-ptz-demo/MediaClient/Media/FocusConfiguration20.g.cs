/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */

#nullable enable

namespace MediaClient.Media
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using MediaClient;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.10.0.0")]
    public partial class FocusConfiguration20
    {
        /// <summary>
        /// Zero or more modes as defined in enumeration tt:AFModes.
        /// </summary>
        [JsonPropertyName("AFMode")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public List<string>? Afmode { get; set; } = default;

        /// <summary>
        /// Mode of auto focus.AUTO - The device automatically adjusts focus.MANUAL - The device does not automatically adjust focus.Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
        /// </summary>
        [JsonPropertyName("AutoFocusMode")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public AutoFocusMode AutoFocusMode { get; set; } = default!;

        /// <summary>
        /// The 'DefaultSpeed' Field.
        /// </summary>
        [JsonPropertyName("DefaultSpeed")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? DefaultSpeed { get; set; } = default;

        /// <summary>
        /// The 'Extension' Field.
        /// </summary>
        [JsonPropertyName("Extension")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public FocusConfiguration20extension? Extension { get; set; } = default;

        /// <summary>
        /// Parameter to set autofocus far limit (unit: meter).
        /// </summary>
        [JsonPropertyName("FarLimit")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? FarLimit { get; set; } = default;

        /// <summary>
        /// Parameter to set autofocus near limit (unit: meter).
        /// </summary>
        [JsonPropertyName("NearLimit")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? NearLimit { get; set; } = default;

    }
}

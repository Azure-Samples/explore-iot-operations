/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.9.0.0; DO NOT EDIT. */

#nullable enable

namespace MediaClient.Media
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using MediaClient;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.9.0.0")]
    public partial class VideoAnalyticsConfiguration : IJsonOnDeserialized, IJsonOnSerializing
    {
        /// <summary>
        /// The 'AnalyticsEngineConfiguration' Field.
        /// </summary>
        [JsonPropertyName("AnalyticsEngineConfiguration")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public AnalyticsEngineConfiguration AnalyticsEngineConfiguration { get; set; } = default!;

        /// <summary>
        /// User readable name of the video analytics configuration.
        /// </summary>
        [JsonPropertyName("Name")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string Name { get; set; } = default!;

        /// <summary>
        /// The 'RuleEngineConfiguration' Field.
        /// </summary>
        [JsonPropertyName("RuleEngineConfiguration")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public RuleEngineConfiguration RuleEngineConfiguration { get; set; } = default!;

        /// <summary>
        /// Unique identifier of the video analytics configuration.
        /// </summary>
        [JsonPropertyName("token")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string Token { get; set; } = default!;

        /// <summary>
        /// Number of internal references currently using this configuration. This informational parameter is read-only. Deprecated for Media2 Service.
        /// </summary>
        [JsonPropertyName("UseCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public int UseCount { get; set; } = default!;

        void IJsonOnDeserialized.OnDeserialized()
        {
            if (AnalyticsEngineConfiguration is null)
            {
                throw new ArgumentNullException("AnalyticsEngineConfiguration field cannot be null");
            }
            if (Name is null)
            {
                throw new ArgumentNullException("Name field cannot be null");
            }
            if (RuleEngineConfiguration is null)
            {
                throw new ArgumentNullException("RuleEngineConfiguration field cannot be null");
            }
            if (Token is null)
            {
                throw new ArgumentNullException("token field cannot be null");
            }
        }

        void IJsonOnSerializing.OnSerializing()
        {
            if (AnalyticsEngineConfiguration is null)
            {
                throw new ArgumentNullException("AnalyticsEngineConfiguration field cannot be null");
            }
            if (Name is null)
            {
                throw new ArgumentNullException("Name field cannot be null");
            }
            if (RuleEngineConfiguration is null)
            {
                throw new ArgumentNullException("RuleEngineConfiguration field cannot be null");
            }
            if (Token is null)
            {
                throw new ArgumentNullException("token field cannot be null");
            }
        }
    }
}

/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.9.0.0; DO NOT EDIT. */

#nullable enable

namespace PtzClient.Ptz
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using PtzClient;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.9.0.0")]
    public partial class Space2ddescription : IJsonOnDeserialized, IJsonOnSerializing
    {
        /// <summary>
        /// A URI of coordinate systems.
        /// </summary>
        [JsonPropertyName("URI")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public string Uri { get; set; } = default!;

        /// <summary>
        /// The 'XRange' Field.
        /// </summary>
        [JsonPropertyName("XRange")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public FloatRange Xrange { get; set; } = default!;

        /// <summary>
        /// The 'YRange' Field.
        /// </summary>
        [JsonPropertyName("YRange")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public FloatRange Yrange { get; set; } = default!;

        void IJsonOnDeserialized.OnDeserialized()
        {
            if (Uri is null)
            {
                throw new ArgumentNullException("URI field cannot be null");
            }
            if (Xrange is null)
            {
                throw new ArgumentNullException("XRange field cannot be null");
            }
            if (Yrange is null)
            {
                throw new ArgumentNullException("YRange field cannot be null");
            }
        }

        void IJsonOnSerializing.OnSerializing()
        {
            if (Uri is null)
            {
                throw new ArgumentNullException("URI field cannot be null");
            }
            if (Xrange is null)
            {
                throw new ArgumentNullException("XRange field cannot be null");
            }
            if (Yrange is null)
            {
                throw new ArgumentNullException("YRange field cannot be null");
            }
        }
    }
}

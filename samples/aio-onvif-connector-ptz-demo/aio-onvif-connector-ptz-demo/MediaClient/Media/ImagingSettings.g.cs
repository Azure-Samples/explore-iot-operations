/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.9.0.0; DO NOT EDIT. */

#nullable enable

namespace MediaClient.Media
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using MediaClient;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.9.0.0")]
    public partial class ImagingSettings
    {
        /// <summary>
        /// Enabled/disabled BLC mode (on/off).
        /// </summary>
        [JsonPropertyName("BacklightCompensation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public BacklightCompensation? BacklightCompensation { get; set; } = default;

        /// <summary>
        /// Image brightness (unit unspecified).
        /// </summary>
        [JsonPropertyName("Brightness")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? Brightness { get; set; } = default;

        /// <summary>
        /// Color saturation of the image (unit unspecified).
        /// </summary>
        [JsonPropertyName("ColorSaturation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? ColorSaturation { get; set; } = default;

        /// <summary>
        /// Contrast of the image (unit unspecified).
        /// </summary>
        [JsonPropertyName("Contrast")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? Contrast { get; set; } = default;

        /// <summary>
        /// Exposure mode of the device.
        /// </summary>
        [JsonPropertyName("Exposure")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public Exposure? Exposure { get; set; } = default;

        /// <summary>
        /// Focus configuration.
        /// </summary>
        [JsonPropertyName("Focus")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public FocusConfiguration? Focus { get; set; } = default;

        /// <summary>
        /// Infrared Cutoff Filter settings.
        /// </summary>
        [JsonPropertyName("IrCutFilter")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public IrCutFilterMode? IrCutFilter { get; set; } = default;

        /// <summary>
        /// Sharpness of the Video image.
        /// </summary>
        [JsonPropertyName("Sharpness")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? Sharpness { get; set; } = default;

        /// <summary>
        /// White balance settings.
        /// </summary>
        [JsonPropertyName("WhiteBalance")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public WhiteBalance? WhiteBalance { get; set; } = default;

        /// <summary>
        /// WDR settings.
        /// </summary>
        [JsonPropertyName("WideDynamicRange")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public WideDynamicRange? WideDynamicRange { get; set; } = default;

    }
}
